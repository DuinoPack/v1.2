
// Hello world:
print "Hello, world!"

// Hello world with printf:
printf("Hello, world!")

// Blink:
function t13 {d13=!d13}
function startup {pinmode(13,1); run t13,500}

// Fade up:
function startup {pinmode(4,1); run fadeup,50}; function fadeup {a4=++i&0xff}

// Fade up-down:
function startup {pinmode(4,1); run fadeupdn,50}; 
function fadeupdn {if ++i&0x100 a4=i; else a4=~i;}

// Time stamper:
function startup {run stamp,1000} function stamp {printf("Time: %010d\r\n", millis)}

// What if you want the LED to be ON for 3 sec, and OFF for 5 min?
http://arduino.cc/forum/index.php/topic,74861.msg576650.html

function startup {pinmode(13,1); run winky; pinmode(14,1); run dinky}
function winky {d13=!d13; if d13 snooze(3000) else snooze(5*60*1000)}
function dinky {d14=!d14; if d14 snooze(6000) else snooze(8*60*1000)}

function startup {pinmode(13,1); run tick}
function tock {snooze(arg(s)*1000); if ++s>=arg(0) s=0}
function tick {d13=!(s&1); tock(3,2,3,5*60)}

// another approach
function startup {pinmode(13,1); run tick}
function setled {dw(arg(1), arg(2)&1)}
function tock {setled(!arg(2),arg(1)); snooze(arg(arg(1)+2)*1000); if arg(1)<arg(0)-3 return arg(1)+1 else return 0}
function tick13 {s=tock(s, 13, 3,2,3,5*60)}
function tick14 {t=tock(t, 14, 2,3,3,2*60,3,2)}

// D5 on for 100, off for 1000
function startup {pinmode(5,1); run onoff;}
function pick {return arg(arg(1)+2);}
function onoff {d5=!d5; snooze(pick(d5,1000,10));}

function onoff {snooze(pick(d5=!d5,1000,10));}

// led chaser, arbitrary pins, constant blinking status
// uses c and d
//
function chase { chaser(5,6,7,8,9,11,12,13); }
function chaser { d=arg(++c); pinmode(d,1); dw(d,!dr(d)); if c>=arg(0) c=0; }
function t2 { pinmode(2,1); d2=!d2; }
function startup { run chase, 50; run t2, 250; }

// rollover test (requires bitlash/examples/rollover.ino)
//
// done: interval-elapsed check, wraparound-proof
// i: timeout interval in millis
// s: starting value for millis
// t: counts millis upward from s until done
//
// example: test(500, 50)
// example: test(-500, 50)
// 
function done {return (t-s) >= i;}
function test { s=t=arg(1); i=arg(2); while !done print s:x,++t:x,done; }

// two blinkers on d13 and d12 controlled by pots on a1 and a2
function t1 { d13=!d13; snooze(a1); }
function t2 { d12=!d12; snooze(a2); }
function startup { run t1; run t2; }

// ascii table
function ascii_table { c=0; while c<128 { showchar; if !(++c%16) print; }
function showchar {if c<0x20 {printf("^%c",c+0x40);} else {printf(" %c",c);}

//...using switch
function showchar { switch c>=0x20 {printf("^%c",c+0x40); printf(" %c",c); }

// Independently control two RGB LEDs on pins 3/5/6 and 9/10/11
function startup { pinmode(3,1); pinmode(5,1); pinmode(6,1); pinmode(9,1); pinmode(10,1); pinmode(11,1); }
function setleft  { a3=arg(1); a4=arg(2); a5=arg(3); }
function setright { a9=arg(1); a10=arg(2); a11=arg(3); }

// action at start and stop of interval
function cycle {print "It is on."; run turnoff,2000};
function turnoff {print "It is off.";stop};

// Pulse stretcher with cancellation
//
// Pushbutton press D2 = LED D13 on for 10min, then off
// Pushbutton press within the 10min = LED off
function startup {pinmode(13,1); run button,100; run timeout,1000;}
function button {if d2 {d13=!d13; t=millis;}}
function timeout {if d13 && ((millis-t)>10*60*1000) d13=0;}

// Dead man's switch / watchdog timer
function trigger { print "triggered"; t=millis; }
function deadman { if d2 t=millis; else if millis-t>3000 trigger(); }
function startup { pinmode(2,1); run deadman,100; }

// Use a pot on Analog0 to control LED brightness on D5
function update {a5=a0/4;}
function startup {run update,100;}

// Blink with programmable delay
// To change the delay, send "d=25\n" for 25 ms
//
function t13 {d13=!d13; snooze(d);}
function startup {pinmode(13,1); d=100; run t13;}

// LED Candle on pin 5
function candle {a5=random(255); snooze(random(100));}
function startup {pinmode(5,1); run candle;}

// pwm motor controls
//
function startup { pinmode(6,1); pinmode(7,1); pinmode(8,1); }
function gocw { d7=1; d8=1; a6=255; }
function goccw { d7=0; d8=0; a6=100; }

// LED d3 on for three seconds after 100 pushes of d4; then off 10 seconds
function startup { pinmode(3,1); run button, 100; }
function button { if !d3 && ((millis-t)>10000) if d4 (++c>=100) {d3=1; c=0; run ledoff, 3000; }}
function ledoff { d3=0; t=millis; stop; }

// PIR on d9 controls relays on D6 and D7 with 10 second on-lag and 15 minute off-lag
function startup   { pinmode(3,1); pinmode(4,1); run watchpir,100; run checkrelays, 1000;}
function watchpir  { if (d9!=d) {d=d9; t=millis;};
function checkrelays { if (d) checkon; else checkoff; }
function checkon  { if (d && (millis-t > 10000) && !d7) { d7=1; delay(1000); d6=1; }}
function checkoff { if (!d && (millis-t > 15*60000) && d7) { d6=0; delay(10000); d7=0; }}

// Select one of three state functions to run using active-low switches on D14..D16
function startup {d14=d15=d16=1; run buttons, 100; run loop}
function buttons {if !d14 s=0; else if !d15 s=1; else if !d16 s=2;}
function loop {switch s {prog1; prog2; prog3}}
function toggle13 {d13=!d13;}
function prog1 {toggle13; snooze(125);}
function prog2 {toggle13; snooze(500);}
function prog3 {toggle13; snooze(1000);}

// Same as above, one button on D14 cycles through modes
function buttons {if !d14 {if ++s>2 s=0;}}

// PIR on D19, active high, activates load on D12 for 10000ms
function startup { pinmode(12,1); run pir,100; run timeout, 1000; }
function pir { if d19!=d {d=d19; t=millis; if d d12=1;} }
function timeout { if d12 && !d && ((millis-t) > 10000) d12=0; }

// outie: set all the specified pins to output, ex: outie(2,4,7,8,12,13);
function outie {i=1; while i<arg(0) pinmode(arg(i++),1);}

// pushbutton on pin 6 lights LED on pin 3; stays on for 5 seconds after release
function startup {pinmode(6,1); run pbcheck, 100; run timeout, 100}
function pbcheck {if (d6) {d3=1; t=millis;}}
function timeout {if (d3 && ((millis-t) > 5000)) d3=0;}

// Step v (value) toward g (goal) one unit each call
function step { v = v + sign(v-g); }

// Three valves on D3, D5, D7 cycle for 3,5,7 minutes with moisture abort on D2
function startup { pinmode(3,1); pinmode(5,1); pinmode(7,1); s=0; run tick; run wet, 1000; }
function wet  { if d2 tick; }
function tick { switch (s) {run3; run5; run7; stop} }
function run3 { d3=1; d5=0; d7=0; s=1; snooze(3*60000); }
function run5 { d3=0; d5=1; d7=0; s=2; snooze(5*60000); }
function run7 { d3=0; d5=0; d7=1; s=3; snooze(7*60000); }

// emit 'doorbell' updates twice per second when switch on D3 is pressed
function startup {run tick,500}
function tick {switch s {idle; notify;}}
function idle {if d3 {s=1; notify}}
function notify {if d3 update('doorbell', 1); else turnoff}
function turnoff {update('doorbell', 0);s=0;}

// Simultaneous blinking and fading on D4 and D5
function startup {pinmode(4,1); pinmode(5,1); run blink,500; run fade,50;}
function blink {d4=!d4;}
function fade {f=f+10; a5=f;}

// Flash D3 on 100 and off 3000
function startup {pinmode(3,1); run t3;}
function t3 {d3=!d3; if d3 snooze(100); else snooze(1000);}

// Count bits set in word, Kernighan style
function countbits {c=0; w=arg(1); while w { w = w&(w-1); ++c; } return c;}

// Light three LED's on D4/D5/D6 one per button press on D2
function startup {pinmode(4,1); pinmode(5,1); pinmode(6,1); run button,100;}
function button {if d2 {b=++b%4; d4=(b>0); d5=(b>1); d6=(b>2);}}

// With blinkm example sketch: red, green, and blue throbbers
function bthrob {if ++b&0x100 blue(b); else blue(~b);}
function rthrob {if ++r&0x100 red(r); else red(~r);}
function gthrob {if ++g&0x100 green(g); else green(~g);}

// Generate pulses randomly separated by 1..1000 ms
function startup {pinmode(13,1); run pulser}
function pulser {d13=!d13; snooze(random(1000));}

// Randomly light 1..8 of D2..D9
function startup { i=2; while i<10 pinmode(i++,1);run lighter,1000; }
function lighter { l=random(8); i=1; while ++i<10 dw(i, (i-2<l)); }

// Six pots on A0..A5 control six servos on D2..D7
// (with Bitlash servo example sketch on Arduino)
function startup { run setservo; }
function setservo { servo(i+2, ar(i)*180/1024); if (++i>5) i=0; }

// Swap two variable values without using a third (interview question)
function swapab { a=a^b; b=a^b; a=a^b; }

// Fire relays on pins [4..7] randomly in short bursts up to a second apart
function startup {pinmode(4,1);pinmode(5,1);pinmode(6,1);pinmode(7,1);run twitcher}
function twitcher {twitch(4+random(4)); snooze(random(1000));}
function twitch {dw(arg(1),1);delay(750);dw(arg(1),0);}

